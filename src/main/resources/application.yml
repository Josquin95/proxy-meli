server:
  port: 8080
  forward-headers-strategy: framework

backend:
  base-url: ${BACKEND_BASE_URL:https://api.mercadolibre.com}

forwarding:
  logging-enabled: true
  resilience:
    enabled: true
    instance-name: meliBackend

proxy:
  rate-limiter:
    backend: ${RATE_LIMIT_BACKEND:memory}
    ip-per-minute: ${IP_PER_MINUTE:1000}
    categories-per-minute: ${CATEGORIES_PER_MINUTE:10000}
    items-ip-per-minute: ${ITEMS_IP_PER_MINUTE:10}

resilience4j:
  circuitbreaker:
    instances:
      meliBackend:
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 50
        failureRateThreshold: 50
        slowCallDurationThreshold: 2s
        slowCallRateThreshold: 50
        permittedNumberOfCallsInHalfOpenState: 5
        waitDurationInOpenState: 30s
  timelimiter:
    instances:
      meliBackend:
        timeoutDuration: 3s

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  metrics:
    tags:
      application: proxy-meli
    distribution:
      percentiles-histogram:
        http.server.requests: true
        http.client.requests: true
  endpoint:
    health:
      show-details: never

logging:
  level:
    root: INFO
    reactor.netty: WARN
    org.springframework.web: INFO
    com.mercadolibre.proxy: INFO

spring:
  http:
    codecs:
      max-in-memory-size: 2MB

---
spring:
  config:
    activate:
      on-profile: redis
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}

proxy:
  rate-limiter:
    backend: redis